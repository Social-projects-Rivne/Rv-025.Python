# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-11 09:25
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(default=b'name', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(default=b'surname', max_length=30, verbose_name='last name')),
                ('email', models.EmailField(default=b'mail', error_messages={b'unique': 'A user with such email already exists.'}, max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(default=b'pass', max_length=128)),
                ('phone', models.ImageField(default=0, unique=True, upload_to=b'')),
                ('avatar', models.ImageField(blank=True, default=b'', upload_to=b'user_images')),
                ('status', models.IntegerField(choices=[(0, b'active'), (1, b'deleted'), (2, b'banned'), (3, b'unauthorized')], default=b'3')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
